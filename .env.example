# Sinch MCP Server Environment Configuration
# Copy this file to .env and configure your Sinch credentials

# ======================================
# LEGACY SINGLE-PROJECT CONFIGURATION
# ======================================
# Use this for simple single-project setups (backward compatibility)

# Required for SMS API
SINCH_SERVICE_PLAN_ID=your-service-plan-id-here

# Required for all APIs
SINCH_API_TOKEN=your-api-token-here

# Required for Numbers API (optional for SMS/Verification)
SINCH_PROJECT_ID=your-project-id-here

# Optional OAuth credentials
SINCH_CLIENT_ID=your-client-id-here
SINCH_CLIENT_SECRET=your-client-secret-here

# Optional: API region (defaults to 'us')
SINCH_REGION=us

# Optional: Parent projects for multi-project legacy support
SINCH_PARENT_PROJECTS=project-1-id,project-2-id,project-3-id

# ======================================
# MULTI-PROJECT CONFIGURATION (RECOMMENDED)
# ======================================
# Use this for managing multiple projects with different credentials

# JSON configuration for multiple projects
SINCH_PROJECTS='{
  "production": {
    "servicePlanId": "prod-service-plan-id",
    "apiToken": "prod-api-token",
    "projectId": "prod-project-id",
    "region": "us",
    "displayName": "Production Environment"
  },
  "staging": {
    "servicePlanId": "staging-service-plan-id", 
    "apiToken": "staging-api-token",
    "projectId": "staging-project-id",
    "region": "us",
    "displayName": "Staging Environment"
  },
  "customer-abc": {
    "servicePlanId": "abc-service-plan-id",
    "apiToken": "abc-api-token", 
    "projectId": "abc-project-id",
    "region": "eu",
    "displayName": "Customer ABC Project"
  },
  "customer-xyz": {
    "servicePlanId": "xyz-service-plan-id",
    "apiToken": "xyz-api-token",
    "projectId": "xyz-project-id", 
    "region": "us",
    "displayName": "Customer XYZ Project"
  }
}'

# Default project to use when no project_config is specified
SINCH_DEFAULT_PROJECT=production

# ======================================
# USAGE EXAMPLES
# ======================================

# Example 1: Legacy single project
# Just set SINCH_SERVICE_PLAN_ID, SINCH_API_TOKEN, and optionally SINCH_PROJECT_ID

# Example 2: Multi-project with default
# Set SINCH_PROJECTS JSON and SINCH_DEFAULT_PROJECT
# Tools will use default project unless project_config parameter is specified

# Example 3: Mixed legacy + multi-project
# You can have both legacy credentials and SINCH_PROJECTS
# Legacy serves as fallback when multi-project config is not available

# ======================================
# CLAUDE DESKTOP CONFIGURATION EXAMPLES
# ======================================

# Single Project Configuration:
# {
#   "mcpServers": {
#     "sinch": {
#       "command": "node",
#       "args": ["/path/to/sinch-mcp-server/build/index.js"],
#       "env": {
#         "SINCH_SERVICE_PLAN_ID": "your-service-plan-id",
#         "SINCH_API_TOKEN": "your-api-token",
#         "SINCH_PROJECT_ID": "your-project-id",
#         "SINCH_REGION": "us"
#       }
#     }
#   }
# }

# Multi-Project Configuration:
# {
#   "mcpServers": {
#     "sinch": {
#       "command": "node", 
#       "args": ["/path/to/sinch-mcp-server/build/index.js"],
#       "env": {
#         "SINCH_PROJECTS": "{'production':{'servicePlanId':'prod-plan','apiToken':'prod-token','projectId':'prod-id','region':'us'},'staging':{'servicePlanId':'staging-plan','apiToken':'staging-token','projectId':'staging-id','region':'us'}}",
#         "SINCH_DEFAULT_PROJECT": "production"
#       }
#     }
#   }
# }

# ======================================
# SECURITY NOTES
# ======================================
# - Never commit .env file to version control
# - Use strong, unique API tokens for each project
# - Rotate credentials regularly
# - Limit API token permissions to required scopes only
# - Consider using environment-specific configurations